---
import Layout from '../../layouts/Layout.astro'
import { experiences, education, skills, publications } from '../../content/data/cv'
import CvTimeline from '../../components/ui/CvTimeline.astro'
import { getLangFromUrl, useTranslations } from '../../i18n/utils'
import List from '../../components/ui/List.astro'
import PublicationsList from '../../components/ui/PublicationsList.astro'
import { languages } from '../../i18n/config'

// 为[lang]动态路由添加getStaticPaths函数
export function getStaticPaths() {
  return Object.keys(languages).map(lang => ({
    params: { lang },
  }));
}

// 使用URL参数获取语言
const { lang } = Astro.params;
const currentLang = lang as keyof typeof languages;
const t = useTranslations(currentLang)

import type { Experience, Education, Publication } from '../../types/cv'

let orderdExperiences: Experience[] = []
let orderdEducations: Education[] = []
let orderedPublications: Publication[] = []

const orderElement = <T extends { time: string }>(a: T, b: T) => {
  const presentValues = ['present', 'now', 'current', 'today']
  if (
			presentValues.includes(
				(a['time'] as string)?.split(' - ')[1]?.toLowerCase()
			)
		) {
			// If the date is 'present', it should be the first element
			return -1
		}
		const dateA = new Date((a['time'] as string)?.split(' - ')[1])
		const dateB = new Date((b['time'] as string)?.split(' - ')[1])
		return dateB.getTime() - dateA.getTime()
}

if (experiences.length > 0) {
	orderdExperiences = experiences.sort((a, b) => {
		return orderElement(a, b)
	})
}

if (education.length > 0) {
	orderdEducations = education.sort((a, b) => {
		return orderElement(a, b)
	})
}

if (publications.length > 0) {
	orderedPublications = publications.sort((a, b) => {
		return orderElement(a, b)
	})
}
---

<Layout>
	{
		orderdEducations.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-xl mb-6 border-b pb-2'>
					Education
				</h2>
				<CvTimeline elements={orderdEducations} colored={true} />
			</section>
		)
	}

	{
		orderdExperiences.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-xl mb-6 border-b pb-2'>
					Experiences
				</h2>
				<CvTimeline elements={orderdExperiences} colored={true} />
			</section>
		)
	}

	{
		orderdEducations.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-xl mb-6 border-b pb-2'>
					Last publications
				</h2>
				<PublicationsList elements={orderedPublications}/>
			</section>
		)
	}

	{
		skills.length > 0 && (
			<section class='mb-12'>
				<List listTitle='Skills' listItems={skills}/>
			</section>
		)
	}
</Layout>
